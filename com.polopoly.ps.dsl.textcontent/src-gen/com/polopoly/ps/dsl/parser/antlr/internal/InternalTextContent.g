/*
* generated by Xtext
*/
grammar InternalTextContent;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package com.polopoly.ps.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package com.polopoly.ps.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import com.polopoly.ps.dsl.services.TextContentGrammarAccess;

}

@parser::members {

 	private TextContentGrammarAccess grammarAccess;
 	
    public InternalTextContentParser(TokenStream input, TextContentGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "TextContent";	
   	}
   	
   	@Override
   	protected TextContentGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleTextContent
entryRuleTextContent returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_COMMENT", "RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getTextContentRule()); }
	 iv_ruleTextContent=ruleTextContent 
	 { $current=$iv_ruleTextContent.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule TextContent
ruleTextContent returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_COMMENT", "RULE_WS");
    }
    @after { leaveRule(); }:
(	otherlv_0='id:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTextContentAccess().getIdKeyword_0());
    }
(
(
		lv_id_1_0=RULE_PP_ID
		{
			newLeafNode(lv_id_1_0, grammarAccess.getTextContentAccess().getIdPP_IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"id",
        		lv_id_1_0, 
        		"PP_ID");
	    }

)
)	otherlv_2='inputtemplate:' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTextContentAccess().getInputtemplateKeyword_2());
    }
(
(
		lv_inputtemplate_3_0=RULE_PP_ID
		{
			newLeafNode(lv_inputtemplate_3_0, grammarAccess.getTextContentAccess().getInputtemplatePP_IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"inputtemplate",
        		lv_inputtemplate_3_0, 
        		"PP_ID");
	    }

)
)	otherlv_4='securityparent:' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getTextContentAccess().getSecurityparentKeyword_4());
    }
(
(
		lv_securityparent_5_0=RULE_PP_ID
		{
			newLeafNode(lv_securityparent_5_0, grammarAccess.getTextContentAccess().getSecurityparentPP_IDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"securityparent",
        		lv_securityparent_5_0, 
        		"PP_ID");
	    }

)
)	otherlv_6='name:' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getTextContentAccess().getNameKeyword_6());
    }
(
(
		lv_name_7_0=RULE_STRING
		{
			newLeafNode(lv_name_7_0, grammarAccess.getTextContentAccess().getNameSTRINGTerminalRuleCall_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTextContentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_7_0, 
        		"STRING");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTextContentAccess().getComponentsComponentParserRuleCall_8_0()); 
	    }
		lv_components_8_0=ruleComponent		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextContentRule());
	        }
       		add(
       			$current, 
       			"components",
        		lv_components_8_0, 
        		"Component");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTextContentAccess().getReferencesReferenceParserRuleCall_9_0()); 
	    }
		lv_references_9_0=ruleReference		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextContentRule());
	        }
       		add(
       			$current, 
       			"references",
        		lv_references_9_0, 
        		"Reference");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getTextContentAccess().getListElementsListElementParserRuleCall_10_0()); 
	    }
		lv_listElements_10_0=ruleListElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTextContentRule());
	        }
       		add(
       			$current, 
       			"listElements",
        		lv_listElements_10_0, 
        		"ListElement");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleComponent
entryRuleComponent returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComponentRule()); }
	 iv_ruleComponent=ruleComponent 
	 { $current=$iv_ruleComponent.current; } 
	 EOF 
;

// Rule Component
ruleComponent returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='component:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComponentAccess().getComponentKeyword_0());
    }
(
(
		lv_group_1_0=RULE_PP_ID
		{
			newLeafNode(lv_group_1_0, grammarAccess.getComponentAccess().getGroupPP_IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"group",
        		lv_group_1_0, 
        		"PP_ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getComponentAccess().getColonKeyword_2());
    }
(
(
		lv_name_3_0=RULE_PP_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getComponentAccess().getNamePP_IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"PP_ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComponentAccess().getColonKeyword_4());
    }
(
(
		lv_value_5_0=RULE_STRING
		{
			newLeafNode(lv_value_5_0, grammarAccess.getComponentAccess().getValueSTRINGTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"value",
        		lv_value_5_0, 
        		"STRING");
	    }

)
))
;





// Entry rule entryRuleReference
entryRuleReference returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReferenceRule()); }
	 iv_ruleReference=ruleReference 
	 { $current=$iv_ruleReference.current; } 
	 EOF 
;

// Rule Reference
ruleReference returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ref:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceAccess().getRefKeyword_0());
    }
(
(
		lv_group_1_0=RULE_PP_ID
		{
			newLeafNode(lv_group_1_0, grammarAccess.getReferenceAccess().getGroupPP_IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"group",
        		lv_group_1_0, 
        		"PP_ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getReferenceAccess().getColonKeyword_2());
    }
(
(
		lv_name_3_0=RULE_PP_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getReferenceAccess().getNamePP_IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"PP_ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getReferenceAccess().getColonKeyword_4());
    }
(
(
		lv_referredId_5_0=RULE_PP_ID
		{
			newLeafNode(lv_referredId_5_0, grammarAccess.getReferenceAccess().getReferredIdPP_IDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReferenceRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"referredId",
        		lv_referredId_5_0, 
        		"PP_ID");
	    }

)
))
;





// Entry rule entryRuleListElement
entryRuleListElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getListElementRule()); }
	 iv_ruleListElement=ruleListElement 
	 { $current=$iv_ruleListElement.current; } 
	 EOF 
;

// Rule ListElement
ruleListElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getListElementAccess().getDefaultListElementParserRuleCall_0()); 
    }
    this_DefaultListElement_0=ruleDefaultListElement
    { 
        $current = $this_DefaultListElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getListElementAccess().getAbstractNamedListElementParserRuleCall_1()); 
    }
    this_AbstractNamedListElement_1=ruleAbstractNamedListElement
    { 
        $current = $this_AbstractNamedListElement_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleDefaultListElement
entryRuleDefaultListElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDefaultListElementRule()); }
	 iv_ruleDefaultListElement=ruleDefaultListElement 
	 { $current=$iv_ruleDefaultListElement.current; } 
	 EOF 
;

// Rule DefaultListElement
ruleDefaultListElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='list:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDefaultListElementAccess().getListKeyword_0());
    }
(
(
		lv_referredId_1_0=RULE_PP_ID
		{
			newLeafNode(lv_referredId_1_0, grammarAccess.getDefaultListElementAccess().getReferredIdPP_IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDefaultListElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"referredId",
        		lv_referredId_1_0, 
        		"PP_ID");
	    }

)
))
;





// Entry rule entryRuleAbstractNamedListElement
entryRuleAbstractNamedListElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAbstractNamedListElementRule()); }
	 iv_ruleAbstractNamedListElement=ruleAbstractNamedListElement 
	 { $current=$iv_ruleAbstractNamedListElement.current; } 
	 EOF 
;

// Rule AbstractNamedListElement
ruleAbstractNamedListElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getAbstractNamedListElementAccess().getNamedListElementParserRuleCall_0()); 
    }
    this_NamedListElement_0=ruleNamedListElement
    { 
        $current = $this_NamedListElement_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getAbstractNamedListElementAccess().getNamedListElementWithRefMetadataParserRuleCall_1()); 
    }
    this_NamedListElementWithRefMetadata_1=ruleNamedListElementWithRefMetadata
    { 
        $current = $this_NamedListElementWithRefMetadata_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNamedListElement
entryRuleNamedListElement returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedListElementRule()); }
	 iv_ruleNamedListElement=ruleNamedListElement 
	 { $current=$iv_ruleNamedListElement.current; } 
	 EOF 
;

// Rule NamedListElement
ruleNamedListElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='list:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamedListElementAccess().getListKeyword_0());
    }
(
(
		lv_listName_1_0=RULE_PP_ID
		{
			newLeafNode(lv_listName_1_0, grammarAccess.getNamedListElementAccess().getListNamePP_IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedListElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"listName",
        		lv_listName_1_0, 
        		"PP_ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamedListElementAccess().getColonKeyword_2());
    }
(
(
		lv_referredId_3_0=RULE_PP_ID
		{
			newLeafNode(lv_referredId_3_0, grammarAccess.getNamedListElementAccess().getReferredIdPP_IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedListElementRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"referredId",
        		lv_referredId_3_0, 
        		"PP_ID");
	    }

)
))
;





// Entry rule entryRuleNamedListElementWithRefMetadata
entryRuleNamedListElementWithRefMetadata returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNamedListElementWithRefMetadataRule()); }
	 iv_ruleNamedListElementWithRefMetadata=ruleNamedListElementWithRefMetadata 
	 { $current=$iv_ruleNamedListElementWithRefMetadata.current; } 
	 EOF 
;

// Rule NamedListElementWithRefMetadata
ruleNamedListElementWithRefMetadata returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='list:' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getNamedListElementWithRefMetadataAccess().getListKeyword_0());
    }
(
(
		lv_listName_1_0=RULE_PP_ID
		{
			newLeafNode(lv_listName_1_0, grammarAccess.getNamedListElementWithRefMetadataAccess().getListNamePP_IDTerminalRuleCall_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedListElementWithRefMetadataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"listName",
        		lv_listName_1_0, 
        		"PP_ID");
	    }

)
)	otherlv_2=':' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getNamedListElementWithRefMetadataAccess().getColonKeyword_2());
    }
(
(
		lv_referredId_3_0=RULE_PP_ID
		{
			newLeafNode(lv_referredId_3_0, grammarAccess.getNamedListElementWithRefMetadataAccess().getReferredIdPP_IDTerminalRuleCall_3_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedListElementWithRefMetadataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"referredId",
        		lv_referredId_3_0, 
        		"PP_ID");
	    }

)
)	otherlv_4=':' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getNamedListElementWithRefMetadataAccess().getColonKeyword_4());
    }
(
(
		lv_referenceMetadataId_5_0=RULE_PP_ID
		{
			newLeafNode(lv_referenceMetadataId_5_0, grammarAccess.getNamedListElementWithRefMetadataAccess().getReferenceMetadataIdPP_IDTerminalRuleCall_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNamedListElementWithRefMetadataRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"referenceMetadataId",
        		lv_referenceMetadataId_5_0, 
        		"PP_ID");
	    }

)
))
;





RULE_PP_ID : ('a'..'z'|'A'..'Z'|'_'|'.'|'0'..'9')+;

RULE_COMMENT : '#' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


