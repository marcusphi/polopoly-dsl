/*
* generated by Xtext
*/

package com.polopoly.ps.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class TextContentGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class TextContentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TextContent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cIdKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIdPP_IDTerminalRuleCall_1_0 = (RuleCall)cIdAssignment_1.eContents().get(0);
		private final Keyword cInputtemplateKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cInputtemplateAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cInputtemplatePP_IDTerminalRuleCall_3_0 = (RuleCall)cInputtemplateAssignment_3.eContents().get(0);
		private final Keyword cSecurityparentKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cSecurityparentAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cSecurityparentPP_IDTerminalRuleCall_5_0 = (RuleCall)cSecurityparentAssignment_5.eContents().get(0);
		private final Keyword cNameKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cNameAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cNameSTRINGTerminalRuleCall_7_0 = (RuleCall)cNameAssignment_7.eContents().get(0);
		private final Assignment cComponentsAssignment_8 = (Assignment)cGroup.eContents().get(8);
		private final RuleCall cComponentsComponentParserRuleCall_8_0 = (RuleCall)cComponentsAssignment_8.eContents().get(0);
		private final Assignment cReferencesAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cReferencesReferenceParserRuleCall_9_0 = (RuleCall)cReferencesAssignment_9.eContents().get(0);
		private final Assignment cListElementsAssignment_10 = (Assignment)cGroup.eContents().get(10);
		private final RuleCall cListElementsListElementParserRuleCall_10_0 = (RuleCall)cListElementsAssignment_10.eContents().get(0);
		
		//TextContent hidden(COMMENT, WS):
		//	"id:" id=PP_ID "inputtemplate:" inputtemplate=PP_ID "securityparent:" securityparent=PP_ID "name:" name=STRING
		//	components+=Component* references+=Reference* listElements+=ListElement*;
		public ParserRule getRule() { return rule; }

		//"id:" id=PP_ID "inputtemplate:" inputtemplate=PP_ID "securityparent:" securityparent=PP_ID "name:" name=STRING
		//components+=Component* references+=Reference* listElements+=ListElement*
		public Group getGroup() { return cGroup; }

		//"id:"
		public Keyword getIdKeyword_0() { return cIdKeyword_0; }

		//id=PP_ID
		public Assignment getIdAssignment_1() { return cIdAssignment_1; }

		//PP_ID
		public RuleCall getIdPP_IDTerminalRuleCall_1_0() { return cIdPP_IDTerminalRuleCall_1_0; }

		//"inputtemplate:"
		public Keyword getInputtemplateKeyword_2() { return cInputtemplateKeyword_2; }

		//inputtemplate=PP_ID
		public Assignment getInputtemplateAssignment_3() { return cInputtemplateAssignment_3; }

		//PP_ID
		public RuleCall getInputtemplatePP_IDTerminalRuleCall_3_0() { return cInputtemplatePP_IDTerminalRuleCall_3_0; }

		//"securityparent:"
		public Keyword getSecurityparentKeyword_4() { return cSecurityparentKeyword_4; }

		//securityparent=PP_ID
		public Assignment getSecurityparentAssignment_5() { return cSecurityparentAssignment_5; }

		//PP_ID
		public RuleCall getSecurityparentPP_IDTerminalRuleCall_5_0() { return cSecurityparentPP_IDTerminalRuleCall_5_0; }

		//"name:"
		public Keyword getNameKeyword_6() { return cNameKeyword_6; }

		//name=STRING
		public Assignment getNameAssignment_7() { return cNameAssignment_7; }

		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_7_0() { return cNameSTRINGTerminalRuleCall_7_0; }

		//components+=Component*
		public Assignment getComponentsAssignment_8() { return cComponentsAssignment_8; }

		//Component
		public RuleCall getComponentsComponentParserRuleCall_8_0() { return cComponentsComponentParserRuleCall_8_0; }

		//references+=Reference*
		public Assignment getReferencesAssignment_9() { return cReferencesAssignment_9; }

		//Reference
		public RuleCall getReferencesReferenceParserRuleCall_9_0() { return cReferencesReferenceParserRuleCall_9_0; }

		//listElements+=ListElement*
		public Assignment getListElementsAssignment_10() { return cListElementsAssignment_10; }

		//ListElement
		public RuleCall getListElementsListElementParserRuleCall_10_0() { return cListElementsListElementParserRuleCall_10_0; }
	}

	public class ComponentElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Component");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cComponentKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGroupAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGroupPP_IDTerminalRuleCall_1_0 = (RuleCall)cGroupAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNamePP_IDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cValueAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cValueSTRINGTerminalRuleCall_5_0 = (RuleCall)cValueAssignment_5.eContents().get(0);
		
		//// TODO: Replace STRING in Component and name with a string without "
		//Component:
		//	"component:" group=PP_ID ":" name=PP_ID ":" value=STRING;
		public ParserRule getRule() { return rule; }

		//"component:" group=PP_ID ":" name=PP_ID ":" value=STRING
		public Group getGroup() { return cGroup; }

		//"component:"
		public Keyword getComponentKeyword_0() { return cComponentKeyword_0; }

		//group=PP_ID
		public Assignment getGroupAssignment_1() { return cGroupAssignment_1; }

		//PP_ID
		public RuleCall getGroupPP_IDTerminalRuleCall_1_0() { return cGroupPP_IDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//name=PP_ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//PP_ID
		public RuleCall getNamePP_IDTerminalRuleCall_3_0() { return cNamePP_IDTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//value=STRING
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//STRING
		public RuleCall getValueSTRINGTerminalRuleCall_5_0() { return cValueSTRINGTerminalRuleCall_5_0; }
	}

	public class ReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Reference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cRefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cGroupAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cGroupPP_IDTerminalRuleCall_1_0 = (RuleCall)cGroupAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNamePP_IDTerminalRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReferredIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cReferredIdPP_IDTerminalRuleCall_5_0 = (RuleCall)cReferredIdAssignment_5.eContents().get(0);
		
		//Reference:
		//	"ref:" group=PP_ID ":" name=PP_ID ":" referredId=PP_ID;
		public ParserRule getRule() { return rule; }

		//"ref:" group=PP_ID ":" name=PP_ID ":" referredId=PP_ID
		public Group getGroup() { return cGroup; }

		//"ref:"
		public Keyword getRefKeyword_0() { return cRefKeyword_0; }

		//group=PP_ID
		public Assignment getGroupAssignment_1() { return cGroupAssignment_1; }

		//PP_ID
		public RuleCall getGroupPP_IDTerminalRuleCall_1_0() { return cGroupPP_IDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//name=PP_ID
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }

		//PP_ID
		public RuleCall getNamePP_IDTerminalRuleCall_3_0() { return cNamePP_IDTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//referredId=PP_ID
		public Assignment getReferredIdAssignment_5() { return cReferredIdAssignment_5; }

		//PP_ID
		public RuleCall getReferredIdPP_IDTerminalRuleCall_5_0() { return cReferredIdPP_IDTerminalRuleCall_5_0; }
	}

	public class ListElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ListElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cDefaultListElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cAbstractNamedListElementParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//ListElement:
		//	DefaultListElement | AbstractNamedListElement;
		public ParserRule getRule() { return rule; }

		//DefaultListElement | AbstractNamedListElement
		public Alternatives getAlternatives() { return cAlternatives; }

		//DefaultListElement
		public RuleCall getDefaultListElementParserRuleCall_0() { return cDefaultListElementParserRuleCall_0; }

		//AbstractNamedListElement
		public RuleCall getAbstractNamedListElementParserRuleCall_1() { return cAbstractNamedListElementParserRuleCall_1; }
	}

	public class DefaultListElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefaultListElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferredIdAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferredIdPP_IDTerminalRuleCall_1_0 = (RuleCall)cReferredIdAssignment_1.eContents().get(0);
		
		//DefaultListElement:
		//	"list:" referredId=PP_ID;
		public ParserRule getRule() { return rule; }

		//"list:" referredId=PP_ID
		public Group getGroup() { return cGroup; }

		//"list:"
		public Keyword getListKeyword_0() { return cListKeyword_0; }

		//referredId=PP_ID
		public Assignment getReferredIdAssignment_1() { return cReferredIdAssignment_1; }

		//PP_ID
		public RuleCall getReferredIdPP_IDTerminalRuleCall_1_0() { return cReferredIdPP_IDTerminalRuleCall_1_0; }
	}

	public class AbstractNamedListElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AbstractNamedListElement");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNamedListElementParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cNamedListElementWithRefMetadataParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//AbstractNamedListElement:
		//	NamedListElement | NamedListElementWithRefMetadata;
		public ParserRule getRule() { return rule; }

		//NamedListElement | NamedListElementWithRefMetadata
		public Alternatives getAlternatives() { return cAlternatives; }

		//NamedListElement
		public RuleCall getNamedListElementParserRuleCall_0() { return cNamedListElementParserRuleCall_0; }

		//NamedListElementWithRefMetadata
		public RuleCall getNamedListElementWithRefMetadataParserRuleCall_1() { return cNamedListElementWithRefMetadataParserRuleCall_1; }
	}

	public class NamedListElementElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedListElement");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cListNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListNamePP_IDTerminalRuleCall_1_0 = (RuleCall)cListNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferredIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferredIdPP_IDTerminalRuleCall_3_0 = (RuleCall)cReferredIdAssignment_3.eContents().get(0);
		
		//NamedListElement:
		//	"list:" listName=PP_ID ":" referredId=PP_ID;
		public ParserRule getRule() { return rule; }

		//"list:" listName=PP_ID ":" referredId=PP_ID
		public Group getGroup() { return cGroup; }

		//"list:"
		public Keyword getListKeyword_0() { return cListKeyword_0; }

		//listName=PP_ID
		public Assignment getListNameAssignment_1() { return cListNameAssignment_1; }

		//PP_ID
		public RuleCall getListNamePP_IDTerminalRuleCall_1_0() { return cListNamePP_IDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//referredId=PP_ID
		public Assignment getReferredIdAssignment_3() { return cReferredIdAssignment_3; }

		//PP_ID
		public RuleCall getReferredIdPP_IDTerminalRuleCall_3_0() { return cReferredIdPP_IDTerminalRuleCall_3_0; }
	}

	public class NamedListElementWithRefMetadataElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NamedListElementWithRefMetadata");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cListKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cListNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cListNamePP_IDTerminalRuleCall_1_0 = (RuleCall)cListNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cReferredIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cReferredIdPP_IDTerminalRuleCall_3_0 = (RuleCall)cReferredIdAssignment_3.eContents().get(0);
		private final Keyword cColonKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReferenceMetadataIdAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cReferenceMetadataIdPP_IDTerminalRuleCall_5_0 = (RuleCall)cReferenceMetadataIdAssignment_5.eContents().get(0);
		
		//NamedListElementWithRefMetadata:
		//	"list:" listName=PP_ID ":" referredId=PP_ID ":" referenceMetadataId=PP_ID;
		public ParserRule getRule() { return rule; }

		//"list:" listName=PP_ID ":" referredId=PP_ID ":" referenceMetadataId=PP_ID
		public Group getGroup() { return cGroup; }

		//"list:"
		public Keyword getListKeyword_0() { return cListKeyword_0; }

		//listName=PP_ID
		public Assignment getListNameAssignment_1() { return cListNameAssignment_1; }

		//PP_ID
		public RuleCall getListNamePP_IDTerminalRuleCall_1_0() { return cListNamePP_IDTerminalRuleCall_1_0; }

		//":"
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }

		//referredId=PP_ID
		public Assignment getReferredIdAssignment_3() { return cReferredIdAssignment_3; }

		//PP_ID
		public RuleCall getReferredIdPP_IDTerminalRuleCall_3_0() { return cReferredIdPP_IDTerminalRuleCall_3_0; }

		//":"
		public Keyword getColonKeyword_4() { return cColonKeyword_4; }

		//referenceMetadataId=PP_ID
		public Assignment getReferenceMetadataIdAssignment_5() { return cReferenceMetadataIdAssignment_5; }

		//PP_ID
		public RuleCall getReferenceMetadataIdPP_IDTerminalRuleCall_5_0() { return cReferenceMetadataIdPP_IDTerminalRuleCall_5_0; }
	}
	
	
	private TextContentElements pTextContent;
	private ComponentElements pComponent;
	private ReferenceElements pReference;
	private ListElementElements pListElement;
	private DefaultListElementElements pDefaultListElement;
	private AbstractNamedListElementElements pAbstractNamedListElement;
	private NamedListElementElements pNamedListElement;
	private NamedListElementWithRefMetadataElements pNamedListElementWithRefMetadata;
	private TerminalRule tPP_ID;
	private TerminalRule tCOMMENT;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public TextContentGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//TextContent hidden(COMMENT, WS):
	//	"id:" id=PP_ID "inputtemplate:" inputtemplate=PP_ID "securityparent:" securityparent=PP_ID "name:" name=STRING
	//	components+=Component* references+=Reference* listElements+=ListElement*;
	public TextContentElements getTextContentAccess() {
		return (pTextContent != null) ? pTextContent : (pTextContent = new TextContentElements());
	}
	
	public ParserRule getTextContentRule() {
		return getTextContentAccess().getRule();
	}

	//// TODO: Replace STRING in Component and name with a string without "
	//Component:
	//	"component:" group=PP_ID ":" name=PP_ID ":" value=STRING;
	public ComponentElements getComponentAccess() {
		return (pComponent != null) ? pComponent : (pComponent = new ComponentElements());
	}
	
	public ParserRule getComponentRule() {
		return getComponentAccess().getRule();
	}

	//Reference:
	//	"ref:" group=PP_ID ":" name=PP_ID ":" referredId=PP_ID;
	public ReferenceElements getReferenceAccess() {
		return (pReference != null) ? pReference : (pReference = new ReferenceElements());
	}
	
	public ParserRule getReferenceRule() {
		return getReferenceAccess().getRule();
	}

	//ListElement:
	//	DefaultListElement | AbstractNamedListElement;
	public ListElementElements getListElementAccess() {
		return (pListElement != null) ? pListElement : (pListElement = new ListElementElements());
	}
	
	public ParserRule getListElementRule() {
		return getListElementAccess().getRule();
	}

	//DefaultListElement:
	//	"list:" referredId=PP_ID;
	public DefaultListElementElements getDefaultListElementAccess() {
		return (pDefaultListElement != null) ? pDefaultListElement : (pDefaultListElement = new DefaultListElementElements());
	}
	
	public ParserRule getDefaultListElementRule() {
		return getDefaultListElementAccess().getRule();
	}

	//AbstractNamedListElement:
	//	NamedListElement | NamedListElementWithRefMetadata;
	public AbstractNamedListElementElements getAbstractNamedListElementAccess() {
		return (pAbstractNamedListElement != null) ? pAbstractNamedListElement : (pAbstractNamedListElement = new AbstractNamedListElementElements());
	}
	
	public ParserRule getAbstractNamedListElementRule() {
		return getAbstractNamedListElementAccess().getRule();
	}

	//NamedListElement:
	//	"list:" listName=PP_ID ":" referredId=PP_ID;
	public NamedListElementElements getNamedListElementAccess() {
		return (pNamedListElement != null) ? pNamedListElement : (pNamedListElement = new NamedListElementElements());
	}
	
	public ParserRule getNamedListElementRule() {
		return getNamedListElementAccess().getRule();
	}

	//NamedListElementWithRefMetadata:
	//	"list:" listName=PP_ID ":" referredId=PP_ID ":" referenceMetadataId=PP_ID;
	public NamedListElementWithRefMetadataElements getNamedListElementWithRefMetadataAccess() {
		return (pNamedListElementWithRefMetadata != null) ? pNamedListElementWithRefMetadata : (pNamedListElementWithRefMetadata = new NamedListElementWithRefMetadataElements());
	}
	
	public ParserRule getNamedListElementWithRefMetadataRule() {
		return getNamedListElementWithRefMetadataAccess().getRule();
	}

	//terminal PP_ID:
	//	("a".."z" | "A".."Z" | "_" | "." | "0".."9")+;
	public TerminalRule getPP_IDRule() {
		return (tPP_ID != null) ? tPP_ID : (tPP_ID = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PP_ID"));
	} 

	//terminal COMMENT:
	//	"#" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getCOMMENTRule() {
		return (tCOMMENT != null) ? tCOMMENT : (tCOMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "COMMENT"));
	} 

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
