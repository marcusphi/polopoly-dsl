/*
* generated by Xtext
*/
package com.polopoly.ps.dsl.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import com.polopoly.ps.dsl.services.TextContentGrammarAccess;

public class TextContentParser extends AbstractContentAssistParser {
	
	@Inject
	private TextContentGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected com.polopoly.ps.dsl.ui.contentassist.antlr.internal.InternalTextContentParser createParser() {
		com.polopoly.ps.dsl.ui.contentassist.antlr.internal.InternalTextContentParser result = new com.polopoly.ps.dsl.ui.contentassist.antlr.internal.InternalTextContentParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getListElementAccess().getAlternatives(), "rule__ListElement__Alternatives");
					put(grammarAccess.getAbstractNamedListElementAccess().getAlternatives(), "rule__AbstractNamedListElement__Alternatives");
					put(grammarAccess.getTextContentAccess().getGroup(), "rule__TextContent__Group__0");
					put(grammarAccess.getComponentAccess().getGroup(), "rule__Component__Group__0");
					put(grammarAccess.getReferenceAccess().getGroup(), "rule__Reference__Group__0");
					put(grammarAccess.getDefaultListElementAccess().getGroup(), "rule__DefaultListElement__Group__0");
					put(grammarAccess.getNamedListElementAccess().getGroup(), "rule__NamedListElement__Group__0");
					put(grammarAccess.getNamedListElementWithRefMetadataAccess().getGroup(), "rule__NamedListElementWithRefMetadata__Group__0");
					put(grammarAccess.getTextContentAccess().getIdAssignment_1(), "rule__TextContent__IdAssignment_1");
					put(grammarAccess.getTextContentAccess().getInputtemplateAssignment_3(), "rule__TextContent__InputtemplateAssignment_3");
					put(grammarAccess.getTextContentAccess().getSecurityparentAssignment_5(), "rule__TextContent__SecurityparentAssignment_5");
					put(grammarAccess.getTextContentAccess().getNameAssignment_7(), "rule__TextContent__NameAssignment_7");
					put(grammarAccess.getTextContentAccess().getComponentsAssignment_8(), "rule__TextContent__ComponentsAssignment_8");
					put(grammarAccess.getTextContentAccess().getReferencesAssignment_9(), "rule__TextContent__ReferencesAssignment_9");
					put(grammarAccess.getTextContentAccess().getListElementsAssignment_10(), "rule__TextContent__ListElementsAssignment_10");
					put(grammarAccess.getComponentAccess().getGroupAssignment_1(), "rule__Component__GroupAssignment_1");
					put(grammarAccess.getComponentAccess().getNameAssignment_3(), "rule__Component__NameAssignment_3");
					put(grammarAccess.getComponentAccess().getValueAssignment_5(), "rule__Component__ValueAssignment_5");
					put(grammarAccess.getReferenceAccess().getGroupAssignment_1(), "rule__Reference__GroupAssignment_1");
					put(grammarAccess.getReferenceAccess().getNameAssignment_3(), "rule__Reference__NameAssignment_3");
					put(grammarAccess.getReferenceAccess().getReferredIdAssignment_5(), "rule__Reference__ReferredIdAssignment_5");
					put(grammarAccess.getDefaultListElementAccess().getReferredIdAssignment_1(), "rule__DefaultListElement__ReferredIdAssignment_1");
					put(grammarAccess.getNamedListElementAccess().getListNameAssignment_1(), "rule__NamedListElement__ListNameAssignment_1");
					put(grammarAccess.getNamedListElementAccess().getReferredIdAssignment_3(), "rule__NamedListElement__ReferredIdAssignment_3");
					put(grammarAccess.getNamedListElementWithRefMetadataAccess().getListNameAssignment_1(), "rule__NamedListElementWithRefMetadata__ListNameAssignment_1");
					put(grammarAccess.getNamedListElementWithRefMetadataAccess().getReferredIdAssignment_3(), "rule__NamedListElementWithRefMetadata__ReferredIdAssignment_3");
					put(grammarAccess.getNamedListElementWithRefMetadataAccess().getReferenceMetadataIdAssignment_5(), "rule__NamedListElementWithRefMetadata__ReferenceMetadataIdAssignment_5");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			com.polopoly.ps.dsl.ui.contentassist.antlr.internal.InternalTextContentParser typedParser = (com.polopoly.ps.dsl.ui.contentassist.antlr.internal.InternalTextContentParser) parser;
			typedParser.entryRuleTextContent();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public TextContentGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(TextContentGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
